{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport HomeScreen from \"../screens/main/HomeScreen\";\nimport MapScreen from \"../screens/main/MapScreen\";\nimport FavoritesScreen from \"../screens/main/FavoritesScreen\";\nimport ProfileScreen from \"../screens/profile/ProfileScreen\";\nimport VenueDetailScreen from \"../screens/venue/VenueDetailScreen\";\nimport MenuScreen from \"../screens/venue/MenuScreen\";\nimport SettingsScreen from \"../screens/profile/SettingsScreen\";\nimport { colors } from \"../utils/constants/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case 'HomeTab':\n              iconName = 'home';\n              break;\n            case 'MapTab':\n              iconName = 'map';\n              break;\n            case 'FavoritesTab':\n              iconName = 'favorite';\n              break;\n            case 'ProfileTab':\n              iconName = 'person';\n              break;\n            default:\n              iconName = 'home';\n          }\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: colors.primary.main,\n        tabBarInactiveTintColor: colors.text.tertiary,\n        tabBarStyle: {\n          backgroundColor: colors.background.primary,\n          borderTopColor: colors.border.light,\n          paddingBottom: 8,\n          paddingTop: 8,\n          height: 60\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500'\n        },\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeTab\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"MapTab\",\n      component: MapScreen,\n      options: {\n        tabBarLabel: 'Map'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"FavoritesTab\",\n      component: FavoritesScreen,\n      options: {\n        tabBarLabel: 'Favorites'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ProfileTab\",\n      component: ProfileScreen,\n      options: {\n        tabBarLabel: 'Profile'\n      }\n    })]\n  });\n};\nvar MainNavigator = function MainNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: colors.background.primary,\n        elevation: 0,\n        shadowOpacity: 0\n      },\n      headerTintColor: colors.text.primary,\n      headerTitleStyle: {\n        fontWeight: '600',\n        fontSize: 18\n      },\n      headerBackTitleVisible: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"VenueDetail\",\n      component: VenueDetailScreen,\n      options: {\n        title: 'Venue Details',\n        headerShown: true\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Menu\",\n      component: MenuScreen,\n      options: {\n        title: 'Menu',\n        headerShown: true\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Settings',\n        headerShown: true\n      }\n    })]\n  });\n};\nexport default MainNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","createStackNavigator","Icon","HomeScreen","MapScreen","FavoritesScreen","ProfileScreen","VenueDetailScreen","MenuScreen","SettingsScreen","colors","jsx","_jsx","jsxs","_jsxs","Tab","Stack","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","primary","main","tabBarInactiveTintColor","text","tertiary","tabBarStyle","backgroundColor","background","borderTopColor","border","light","paddingBottom","paddingTop","height","tabBarLabelStyle","fontSize","fontWeight","headerShown","children","Screen","component","options","tabBarLabel","MainNavigator","headerStyle","elevation","shadowOpacity","headerTintColor","headerTitleStyle","headerBackTitleVisible","title"],"sources":["C:/Claude/Happy Hour App/src/navigation/MainNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nimport HomeScreen from '@screens/main/HomeScreen';\nimport MapScreen from '@screens/main/MapScreen';\nimport FavoritesScreen from '@screens/main/FavoritesScreen';\nimport ProfileScreen from '@screens/profile/ProfileScreen';\nimport VenueDetailScreen from '@screens/venue/VenueDetailScreen';\nimport MenuScreen from '@screens/venue/MenuScreen';\nimport SettingsScreen from '@screens/profile/SettingsScreen';\n\nimport {colors} from '@constants/colors';\n\nexport type MainTabParamList = {\n  HomeTab: undefined;\n  MapTab: undefined;\n  FavoritesTab: undefined;\n  ProfileTab: undefined;\n};\n\nexport type MainStackParamList = {\n  MainTabs: undefined;\n  VenueDetail: {venueId: string};\n  Menu: {venueId: string};\n  Settings: undefined;\n};\n\nconst Tab = createBottomTabNavigator<MainTabParamList>();\nconst Stack = createStackNavigator<MainStackParamList>();\n\nconst MainTabs: React.FC = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({route}) => ({\n        tabBarIcon: ({focused, color, size}) => {\n          let iconName: string;\n\n          switch (route.name) {\n            case 'HomeTab':\n              iconName = 'home';\n              break;\n            case 'MapTab':\n              iconName = 'map';\n              break;\n            case 'FavoritesTab':\n              iconName = 'favorite';\n              break;\n            case 'ProfileTab':\n              iconName = 'person';\n              break;\n            default:\n              iconName = 'home';\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: colors.primary.main,\n        tabBarInactiveTintColor: colors.text.tertiary,\n        tabBarStyle: {\n          backgroundColor: colors.background.primary,\n          borderTopColor: colors.border.light,\n          paddingBottom: 8,\n          paddingTop: 8,\n          height: 60,\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500',\n        },\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeScreen}\n        options={{\n          tabBarLabel: 'Home',\n        }}\n      />\n      <Tab.Screen\n        name=\"MapTab\"\n        component={MapScreen}\n        options={{\n          tabBarLabel: 'Map',\n        }}\n      />\n      <Tab.Screen\n        name=\"FavoritesTab\"\n        component={FavoritesScreen}\n        options={{\n          tabBarLabel: 'Favorites',\n        }}\n      />\n      <Tab.Screen\n        name=\"ProfileTab\"\n        component={ProfileScreen}\n        options={{\n          tabBarLabel: 'Profile',\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst MainNavigator: React.FC = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background.primary,\n          elevation: 0,\n          shadowOpacity: 0,\n        },\n        headerTintColor: colors.text.primary,\n        headerTitleStyle: {\n          fontWeight: '600',\n          fontSize: 18,\n        },\n        headerBackTitleVisible: false,\n      }}\n    >\n      <Stack.Screen\n        name=\"MainTabs\"\n        component={MainTabs}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"VenueDetail\"\n        component={VenueDetailScreen}\n        options={{\n          title: 'Venue Details',\n          headerShown: true,\n        }}\n      />\n      <Stack.Screen\n        name=\"Menu\"\n        component={MenuScreen}\n        options={{\n          title: 'Menu',\n          headerShown: true,\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          title: 'Settings',\n          headerShown: true,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default MainNavigator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
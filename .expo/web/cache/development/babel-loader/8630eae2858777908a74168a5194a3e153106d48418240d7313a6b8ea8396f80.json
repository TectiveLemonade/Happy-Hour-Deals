{"ast":null,"code":"var apiMiddleware = function apiMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      var _action$type, _action$type2, _action$type3;\n      if ((_action$type = action.type) != null && _action$type.endsWith('/pending')) {\n        console.log(`[API] Starting request: ${action.type}`);\n        return next(action);\n      }\n      if ((_action$type2 = action.type) != null && _action$type2.endsWith('/fulfilled')) {\n        console.log(`[API] Request successful: ${action.type}`);\n        return next(action);\n      }\n      if ((_action$type3 = action.type) != null && _action$type3.endsWith('/rejected')) {\n        console.error(`[API] Request failed: ${action.type}`, action.payload);\n        return next(action);\n      }\n      return next(action);\n    };\n  };\n};\nexport default apiMiddleware;","map":{"version":3,"names":["apiMiddleware","store","next","action","_action$type","_action$type2","_action$type3","type","endsWith","console","log","error","payload"],"sources":["C:/Claude/Happy Hour App/src/store/middleware/apiMiddleware.ts"],"sourcesContent":["import {Middleware} from '@reduxjs/toolkit';\nimport {RootState} from '../index';\n\n// API middleware for handling API requests and responses\nconst apiMiddleware: Middleware<{}, RootState> = (store) => (next) => (action) => {\n  // Handle API request actions\n  if (action.type?.endsWith('/pending')) {\n    console.log(`[API] Starting request: ${action.type}`);\n    \n    // You could add request logging, analytics, or other side effects here\n    // For example, track API usage for rate limiting\n    \n    return next(action);\n  }\n\n  // Handle API success actions\n  if (action.type?.endsWith('/fulfilled')) {\n    console.log(`[API] Request successful: ${action.type}`);\n    \n    // You could add response caching, success analytics, etc.\n    \n    return next(action);\n  }\n\n  // Handle API error actions\n  if (action.type?.endsWith('/rejected')) {\n    console.error(`[API] Request failed: ${action.type}`, action.payload);\n    \n    // You could add error reporting, retry logic, etc.\n    \n    return next(action);\n  }\n\n  return next(action);\n};\n\nexport default apiMiddleware;"],"mappings":"AAIA,IAAMA,aAAwC,GAAG,SAA3CA,aAAwCA,CAAIC,KAAK;EAAA,OAAK,UAACC,IAAI;IAAA,OAAK,UAACC,MAAM,EAAK;MAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA;MAEhF,KAAAF,YAAA,GAAID,MAAM,CAACI,IAAI,aAAXH,YAAA,CAAaI,QAAQ,CAAC,UAAU,CAAC,EAAE;QACrCC,OAAO,CAACC,GAAG,CAAC,2BAA2BP,MAAM,CAACI,IAAI,EAAE,CAAC;QAKrD,OAAOL,IAAI,CAACC,MAAM,CAAC;MACrB;MAGA,KAAAE,aAAA,GAAIF,MAAM,CAACI,IAAI,aAAXF,aAAA,CAAaG,QAAQ,CAAC,YAAY,CAAC,EAAE;QACvCC,OAAO,CAACC,GAAG,CAAC,6BAA6BP,MAAM,CAACI,IAAI,EAAE,CAAC;QAIvD,OAAOL,IAAI,CAACC,MAAM,CAAC;MACrB;MAGA,KAAAG,aAAA,GAAIH,MAAM,CAACI,IAAI,aAAXD,aAAA,CAAaE,QAAQ,CAAC,WAAW,CAAC,EAAE;QACtCC,OAAO,CAACE,KAAK,CAAC,yBAAyBR,MAAM,CAACI,IAAI,EAAE,EAAEJ,MAAM,CAACS,OAAO,CAAC;QAIrE,OAAOV,IAAI,CAACC,MAAM,CAAC;MACrB;MAEA,OAAOD,IAAI,CAACC,MAAM,CAAC;IACrB,CAAC;EAAA;AAAA;AAED,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
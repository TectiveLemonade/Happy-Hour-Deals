{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAppSelector } from \"../store/hooks\";\nimport AuthNavigator from \"./AuthNavigator\";\nimport MainNavigator from \"./MainNavigator\";\nimport OnboardingScreen from \"../screens/auth/OnboardingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useAppSelector.isAuthenticated,\n    isFirstLaunch = _useAppSelector.isFirstLaunch;\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        gestureEnabled: false\n      },\n      children: isFirstLaunch ? _jsx(Stack.Screen, {\n        name: \"Onboarding\",\n        component: OnboardingScreen,\n        options: {\n          animationTypeForReplace: 'push'\n        }\n      }) : !isAuthenticated ? _jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator,\n        options: {\n          animationTypeForReplace: 'push'\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainNavigator,\n        options: {\n          animationTypeForReplace: 'push'\n        }\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","useAppSelector","AuthNavigator","MainNavigator","OnboardingScreen","jsx","_jsx","Stack","AppNavigator","_useAppSelector","state","auth","isAuthenticated","isFirstLaunch","children","Navigator","screenOptions","headerShown","gestureEnabled","Screen","name","component","options","animationTypeForReplace"],"sources":["C:/Claude/Happy Hour App/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport {useAppSelector} from '@store/hooks';\nimport AuthNavigator from './AuthNavigator';\nimport MainNavigator from './MainNavigator';\nimport OnboardingScreen from '@screens/auth/OnboardingScreen';\n\nconst Stack = createStackNavigator();\n\nconst AppNavigator: React.FC = () => {\n  const {isAuthenticated, isFirstLaunch} = useAppSelector(state => state.auth);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n          gestureEnabled: false,\n        }}\n      >\n        {isFirstLaunch ? (\n          <Stack.Screen\n            name=\"Onboarding\"\n            component={OnboardingScreen}\n            options={{\n              animationTypeForReplace: 'push',\n            }}\n          />\n        ) : !isAuthenticated ? (\n          <Stack.Screen\n            name=\"Auth\"\n            component={AuthNavigator}\n            options={{\n              animationTypeForReplace: 'push',\n            }}\n          />\n        ) : (\n          <Stack.Screen\n            name=\"Main\"\n            component={MainNavigator}\n            options={{\n              animationTypeForReplace: 'push',\n            }}\n          />\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,oBAAoB,QAAO,yBAAyB;AAE5D,SAAQC,cAAc;AACtB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,gBAAgB;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAE9D,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AAEpC,IAAMQ,YAAsB,GAAG,SAAzBA,YAAsBA,CAAA,EAAS;EACnC,IAAAC,eAAA,GAAyCR,cAAc,CAAC,UAAAS,KAAK;MAAA,OAAIA,KAAK,CAACC,IAAI;IAAA,EAAC;IAArEC,eAAe,GAAAH,eAAA,CAAfG,eAAe;IAAEC,aAAa,GAAAJ,eAAA,CAAbI,aAAa;EAErC,OACEP,IAAA,CAACP,mBAAmB;IAAAe,QAAA,EAClBR,IAAA,CAACC,KAAK,CAACQ,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE,KAAK;QAClBC,cAAc,EAAE;MAClB,CAAE;MAAAJ,QAAA,EAEDD,aAAa,GACZP,IAAA,CAACC,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,YAAY;QACjBC,SAAS,EAAEjB,gBAAiB;QAC5BkB,OAAO,EAAE;UACPC,uBAAuB,EAAE;QAC3B;MAAE,CACH,CAAC,GACA,CAACX,eAAe,GAClBN,IAAA,CAACC,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEnB,aAAc;QACzBoB,OAAO,EAAE;UACPC,uBAAuB,EAAE;QAC3B;MAAE,CACH,CAAC,GAEFjB,IAAA,CAACC,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAElB,aAAc;QACzBmB,OAAO,EAAE;UACPC,uBAAuB,EAAE;QAC3B;MAAE,CACH;IACF,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAef,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
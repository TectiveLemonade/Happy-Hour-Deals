{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { colors } from \"../../utils/constants/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoadingScreen = function LoadingScreen(_ref) {\n  var _ref$message = _ref.message,\n    message = _ref$message === void 0 ? 'Loading...' : _ref$message,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'large' : _ref$size;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ActivityIndicator, {\n      size: size,\n      color: colors.primary.main,\n      style: styles.spinner\n    }), _jsx(Text, {\n      style: styles.message,\n      children: message\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background.primary\n  },\n  spinner: {\n    marginBottom: 16\n  },\n  message: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    fontWeight: '500'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","ActivityIndicator","colors","jsx","_jsx","jsxs","_jsxs","LoadingScreen","_ref","_ref$message","message","_ref$size","size","style","styles","container","children","color","primary","main","spinner","create","flex","justifyContent","alignItems","backgroundColor","background","marginBottom","fontSize","text","secondary","textAlign","fontWeight"],"sources":["C:/Claude/Happy Hour App/src/components/common/LoadingScreen.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native';\nimport {colors} from '@constants/colors';\n\ninterface LoadingScreenProps {\n  message?: string;\n  size?: 'small' | 'large';\n}\n\nconst LoadingScreen: React.FC<LoadingScreenProps> = ({\n  message = 'Loading...',\n  size = 'large',\n}) => {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator\n        size={size}\n        color={colors.primary.main}\n        style={styles.spinner}\n      />\n      <Text style={styles.message}>{message}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background.primary,\n  },\n  spinner: {\n    marginBottom: 16,\n  },\n  message: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    fontWeight: '500',\n  },\n});\n\nexport default LoadingScreen;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAQ1B,SAAQC,MAAM;AAA2B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAOzC,IAAMC,aAA2C,GAAG,SAA9CA,aAA2CA,CAAAC,IAAA,EAG3C;EAAA,IAAAC,YAAA,GAAAD,IAAA,CAFJE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,YAAY,GAAAA,YAAA;IAAAE,SAAA,GAAAH,IAAA,CACtBI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,OAAO,GAAAA,SAAA;EAEd,OACEL,KAAA,CAACR,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BZ,IAAA,CAACH,iBAAiB;MAChBW,IAAI,EAAEA,IAAK;MACXK,KAAK,EAAEf,MAAM,CAACgB,OAAO,CAACC,IAAK;MAC3BN,KAAK,EAAEC,MAAM,CAACM;IAAQ,CACvB,CAAC,EACFhB,IAAA,CAACL,IAAI;MAACc,KAAK,EAAEC,MAAM,CAACJ,OAAQ;MAAAM,QAAA,EAAEN;IAAO,CAAO,CAAC;EAAA,CACzC,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAEvB,MAAM,CAACwB,UAAU,CAACR;EACrC,CAAC;EACDE,OAAO,EAAE;IACPO,YAAY,EAAE;EAChB,CAAC;EACDjB,OAAO,EAAE;IACPkB,QAAQ,EAAE,EAAE;IACZX,KAAK,EAAEf,MAAM,CAAC2B,IAAI,CAACC,SAAS;IAC5BC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
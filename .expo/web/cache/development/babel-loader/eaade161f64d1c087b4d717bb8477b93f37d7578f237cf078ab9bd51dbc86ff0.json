{"ast":null,"code":"var analyticsMiddleware = function analyticsMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      var result = next(action);\n      if (action.type === 'venues/searchVenues/fulfilled') {\n        console.log('[Analytics] Search performed', {\n          timestamp: new Date().toISOString(),\n          resultsCount: action.payload.venues.length\n        });\n      }\n      if (action.type === 'venues/getVenueDetails/fulfilled') {\n        console.log('[Analytics] Venue details viewed', {\n          venueId: action.payload.venueDetails.id,\n          timestamp: new Date().toISOString()\n        });\n      }\n      if (action.type === 'venues/toggleFavorite/fulfilled') {\n        console.log('[Analytics] Favorite toggled', {\n          venueId: action.payload.venueId,\n          isFavorite: action.payload.isFavorite,\n          timestamp: new Date().toISOString()\n        });\n      }\n      if (action.type === 'user/checkIn/fulfilled') {\n        console.log('[Analytics] User checked in', {\n          venueId: action.payload.venueId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      if (action.type === 'auth/loginUser/fulfilled') {\n        console.log('[Analytics] User logged in', {\n          userId: action.payload.user.id,\n          timestamp: new Date().toISOString()\n        });\n      }\n      if (action.type === 'auth/logoutUser/fulfilled') {\n        console.log('[Analytics] User logged out', {\n          timestamp: new Date().toISOString()\n        });\n      }\n      return result;\n    };\n  };\n};\nexport default analyticsMiddleware;","map":{"version":3,"names":["analyticsMiddleware","store","next","action","result","type","console","log","timestamp","Date","toISOString","resultsCount","payload","venues","length","venueId","venueDetails","id","isFavorite","userId","user"],"sources":["C:/Claude/Happy Hour App/src/store/middleware/analyticsMiddleware.ts"],"sourcesContent":["import {Middleware} from '@reduxjs/toolkit';\nimport {RootState} from '../index';\n\n// Analytics middleware for tracking user interactions\nconst analyticsMiddleware: Middleware<{}, RootState> = (store) => (next) => (action) => {\n  const result = next(action);\n  \n  // Track search events\n  if (action.type === 'venues/searchVenues/fulfilled') {\n    console.log('[Analytics] Search performed', {\n      timestamp: new Date().toISOString(),\n      resultsCount: action.payload.venues.length,\n    });\n  }\n  \n  // Track venue detail views\n  if (action.type === 'venues/getVenueDetails/fulfilled') {\n    console.log('[Analytics] Venue details viewed', {\n      venueId: action.payload.venueDetails.id,\n      timestamp: new Date().toISOString(),\n    });\n  }\n  \n  // Track favorite actions\n  if (action.type === 'venues/toggleFavorite/fulfilled') {\n    console.log('[Analytics] Favorite toggled', {\n      venueId: action.payload.venueId,\n      isFavorite: action.payload.isFavorite,\n      timestamp: new Date().toISOString(),\n    });\n  }\n  \n  // Track user check-ins\n  if (action.type === 'user/checkIn/fulfilled') {\n    console.log('[Analytics] User checked in', {\n      venueId: action.payload.venueId,\n      timestamp: new Date().toISOString(),\n    });\n  }\n  \n  // Track authentication events\n  if (action.type === 'auth/loginUser/fulfilled') {\n    console.log('[Analytics] User logged in', {\n      userId: action.payload.user.id,\n      timestamp: new Date().toISOString(),\n    });\n  }\n  \n  if (action.type === 'auth/logoutUser/fulfilled') {\n    console.log('[Analytics] User logged out', {\n      timestamp: new Date().toISOString(),\n    });\n  }\n  \n  return result;\n};\n\nexport default analyticsMiddleware;"],"mappings":"AAIA,IAAMA,mBAA8C,GAAG,SAAjDA,mBAA8CA,CAAIC,KAAK;EAAA,OAAK,UAACC,IAAI;IAAA,OAAK,UAACC,MAAM,EAAK;MACtF,IAAMC,MAAM,GAAGF,IAAI,CAACC,MAAM,CAAC;MAG3B,IAAIA,MAAM,CAACE,IAAI,KAAK,+BAA+B,EAAE;QACnDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE;UAC1CC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACnCC,YAAY,EAAER,MAAM,CAACS,OAAO,CAACC,MAAM,CAACC;QACtC,CAAC,CAAC;MACJ;MAGA,IAAIX,MAAM,CAACE,IAAI,KAAK,kCAAkC,EAAE;QACtDC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;UAC9CQ,OAAO,EAAEZ,MAAM,CAACS,OAAO,CAACI,YAAY,CAACC,EAAE;UACvCT,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MAGA,IAAIP,MAAM,CAACE,IAAI,KAAK,iCAAiC,EAAE;QACrDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE;UAC1CQ,OAAO,EAAEZ,MAAM,CAACS,OAAO,CAACG,OAAO;UAC/BG,UAAU,EAAEf,MAAM,CAACS,OAAO,CAACM,UAAU;UACrCV,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MAGA,IAAIP,MAAM,CAACE,IAAI,KAAK,wBAAwB,EAAE;QAC5CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;UACzCQ,OAAO,EAAEZ,MAAM,CAACS,OAAO,CAACG,OAAO;UAC/BP,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MAGA,IAAIP,MAAM,CAACE,IAAI,KAAK,0BAA0B,EAAE;QAC9CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;UACxCY,MAAM,EAAEhB,MAAM,CAACS,OAAO,CAACQ,IAAI,CAACH,EAAE;UAC9BT,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MAEA,IAAIP,MAAM,CAACE,IAAI,KAAK,2BAA2B,EAAE;QAC/CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;UACzCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MAEA,OAAON,MAAM;IACf,CAAC;EAAA;AAAA;AAED,eAAeJ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}